services:
  frontend:
    platform: linux/amd64
    # We're backing up a step and using the nginx image that the front end's Dockerfile specifies as a base image
    image: docker.io/nginxinc/nginx-unprivileged:1.26.3
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      # Bind-mount the build products where they're expected to be in the standard distribution image
      - ${SCICAT_FRONTEND_ALS_LOCATION:-.}/dist/browser:/usr/share/nginx/html
      # Bind-mount the build nginx configuration file used in the standard distribution image
      - ${SCICAT_FRONTEND_ALS_LOCATION:-.}/scripts/nginx.conf:/etc/nginx/nginx.conf
      #- ${PWD}/entrypoints/loop_entrypoints.sh:/usr/local/bin/loop_entrypoints.sh
      #- ${PWD}/entrypoints/merge_json.sh:/docker-entrypoints/10.sh
      - ./config/config.json:/usr/share/nginx/html/assets/config.json
    #entrypoint: loop_entrypoints.sh
    command: nginx -g "daemon off;"
    labels:
      - traefik.http.routers.frontend.rule=Host(`localhost`)
      # Adding a label for traefik to learn which port to look for a service on
      - traefik.http.services.frontend.loadbalancer.server.port=8080
    restart: on-failure
    environment:
      BACKEND_URL: ${BACKEND_HTTPS_URL:-http://backend.localhost}
